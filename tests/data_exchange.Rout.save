
R Under development (unstable) (2020-08-22 r79063) -- "Unsuffered Consequences"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## test the data exchange between R and Weka
> 
> library(RWeka)
> 
> ## low-level
> 
> ## <FIXME>
> ## Remove eventually.
> suppressWarnings(RNGversion("3.5.0"))
> ## </FIXME>
> 
> set.seed(123)
> 
> 
> x <- data.frame(R = runif(10),
+                 L = sample(c(FALSE, TRUE), 10, rep = TRUE),
+                 C = sample(LETTERS[1:3], 10, rep = TRUE),
+                 F = factor(sample(c("good","bad"), 10, rep = TRUE)),
+                 stringsAsFactors = FALSE)
> x
           R     L C    F
1  0.2875775  TRUE C  bad
2  0.7883051 FALSE C  bad
3  0.4089769  TRUE B  bad
4  0.8830174  TRUE C  bad
5  0.9404673 FALSE B good
6  0.0455565  TRUE C good
7  0.5281055 FALSE B  bad
8  0.8924190 FALSE B good
9  0.5514350 FALSE A good
10 0.4566147  TRUE A good
> 
> jx <- RWeka:::read_data_into_Weka(x, length(x))
> rJava::.jcall(jx, "I", "classIndex")
[1] 3
> 
> xj <- RWeka:::read_instances_from_Weka(jx)
> all.equal(x, xj)    # TRUE
[1] TRUE
> 
> ## mixed data
> 
> f <- system.file("arff", "test1.arff", package = "RWeka")
> x <- read.arff(f)
> x
  string enum numeric                date
1    l 1    1     0.0 2012-12-12 12:12:12
2    l 2    2     1.0 2012-12-12 12:12:12
3    l 3    3     0.3 2012-12-12 12:12:12
4   <NA>    1     0.0 2012-12-12 12:12:12
5    l 2 <NA>     1.0 2012-12-12 12:12:12
6    l 3    3      NA                <NA>
> 
> temp <- tempfile()
> write.arff(x, temp)
> 
> xx <- read.arff(temp)
> unlink(temp)
> 
> all.equal(x, xx)    # TRUE
[1] TRUE
> 
> # test the R parser
> 
> xx <- RWeka:::read.arff.R(f)
> xx
  string enum numeric                date
1    l 1    1     0.0 2012-12-12 12:12:12
2    l 2    2     1.0 2012-12-12 12:12:12
3    l 3    3     0.3 2012-12-12 12:12:12
4   <NA>    1     0.0 2012-12-12 12:12:12
5    l 2 <NA>     1.0 2012-12-12 12:12:12
6    l 3    3      NA                <NA>
> 
> all.equal(x, xx)    # TRUE
[1] TRUE
> 
> ## sparse data
> 
> f <- system.file("arff", "test_sparse.arff", package = "RWeka")
> x <- read.arff(f)
> x
  A   B
1 0 0.5
2 1 0.1
> 
> temp <- tempfile()
> write.arff(x, temp)
> 
> xx <- read.arff(temp)
> unlink(temp)
> 
> all.equal(x, xx)    # TRUE
[1] TRUE
> 
> # test the R parser
> 
> all.equal(x, RWeka:::read.arff.R(f))	# TRUE
[1] TRUE
> 
> ## uppercase and quoting
> 
> x <- read.arff(system.file("arff", "test2.arff", package = "RWeka"))
> x
  NAMES               DATES STRING
1     A 2006-02-03 23:35:53      A
2     B 2006-06-03 23:35:54   <NA>
3     C 2006-02-03 23:35:55  B'\\C
> 
> ## connections
> 
> f <- file("")
> write.arff(x, f)
> xx <- read.arff(f)
> close(f)
> print(all.equal(x, xx))                 # TRUE
[1] TRUE
> 
> ## date normalization
> x <- data.frame(date1 = as.POSIXct("2012-12-12 12:12:12", tz = ""),
+ 		date2 = as.POSIXct("2012-12-12 12:12:12", tz = "GMT"))
> x
                date1               date2
1 2012-12-12 12:12:12 2012-12-12 12:12:12
> 
> temp <- tempfile()
> write.arff(x, temp)
> 
> xx <- read.arff(temp)
> unlink(temp)
> xx
                date1               date2
1 2012-12-12 12:12:12 2012-12-12 13:12:12
> 
> ## differ in representation
> ## <FIXME>
> ## Argh: we know that when using the default Weka based reader and
> ## writer, we get GMT changed to the local time zone, but all.equal()
> ## does not find this for R < 4.1.  Hence the following which always
> ## "works" ... remove eventually.
> all.equal(attributes(x[["date2"]]), attributes(xx[["date2"]]))
[1] "Component \"tzone\": 1 string mismatch"
> attr(x[["date2"]], "tzone") <- attr(xx[["date2"]], "tzone") <- NULL
> ## </FIXME>
> all.equal(x, xx)
[1] TRUE
> 
> ## test the R parser and writer
> temp <- tempfile()
> RWeka:::write.arff.R(x, temp)
> 
> zz <- RWeka:::read.arff.R(temp)
> unlink(temp)
> zz
                date1               date2
1 2012-12-12 12:12:12 2012-12-12 13:12:12
> 
> all.equal(xx, zz)   # TRUE 
[1] TRUE
> 
> ###
> 
> proc.time()
   user  system elapsed 
  1.163   0.072   0.642 
